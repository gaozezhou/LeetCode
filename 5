class Solution {
public:
    string longestPalindrome(string s) {
        string ans;
        if (s.size() < 1) return ans;
        int n = 0;
        for(int i = 0; i < s.size(); i++){
            int k = 0;
            while((i - k >= 0) && (i + k < s.size())){
                if(s[i - k] == s[i + k]){
                    if (2 * k + 1 > n){
                        // cout<<i<<" "<<k<<"|";
                        ans = s.substr(i - k, 2 * k + 1);
                        n = 2 * k + 1;
                    }
                    k++;
                }
                else
                    break;
            }
        }
        for(int i = 0; i < s.size() - 1; i++){
            int j = i + 1;
            int k = 0;
            while((i - k >= 0) && (j + k < s.size())){
                if(s[i - k] == s[j + k]){
                    if (2 * k + 2 > n){
                        // cout<<i<<" "<<k<<"|";
                        ans = s.substr(i - k, 2 * k + 2);
                        n = 2 * k + 2;
                    }
                    k++;
                }
                else
                    break;
            }
        }
        return ans;
    }
};
